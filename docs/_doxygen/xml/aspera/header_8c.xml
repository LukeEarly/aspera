<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="header_8c" kind="file" language="C++">
    <compoundname>header.c</compoundname>
    <includes refid="irfs_8h" local="no">init/irfs.h</includes>
    <incdepgraph>
      <node id="2">
        <label>init/irfs.h</label>
        <link refid="irfs_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="1">
        <label>/home/luke/le/aspera/aspera/init/irfs/header.c</label>
        <link refid="header_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="header_8c_1acd45a1ea8a78bef662af5165387851f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int irfs_check_magic</definition>
        <argsstring>(struct irfs_mem mem)</argsstring>
        <name>irfs_check_magic</name>
        <param>
          <type>struct <ref refid="structirfs__mem" kindref="compound">irfs_mem</ref></type>
          <declname>mem</declname>
        </param>
        <briefdescription>
<para>Checks the magic string &quot;IRFS&quot; (no null byte). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mem</parametername>
</parameternamelist>
<parameterdescription>
<para>memory location and size of image. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if matches, 0 if not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/luke/le/aspera/aspera/init/irfs/header.c" line="3" column="5" bodyfile="/home/luke/le/aspera/aspera/init/irfs/header.c" bodystart="3" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="header_8c_1a6c7193788c96a1a71d216866b6d64517" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structirfs__header" kindref="compound">irfs_header</ref></type>
        <definition>struct irfs_header irfs_parse_header</definition>
        <argsstring>(struct irfs_mem mem)</argsstring>
        <name>irfs_parse_header</name>
        <param>
          <type>struct <ref refid="structirfs__mem" kindref="compound">irfs_mem</ref></type>
          <declname>mem</declname>
        </param>
        <briefdescription>
<para>Populates the struct with the values of the header. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mem</parametername>
</parameternamelist>
<parameterdescription>
<para>memory location and size of image. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a struct of the header values </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/luke/le/aspera/aspera/init/irfs/header.c" line="3" column="5" bodyfile="/home/luke/le/aspera/aspera/init/irfs/header.c" bodystart="13" bodyend="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;init/irfs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>irfs_check_magic(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structirfs__mem" kindref="compound">irfs_mem</ref><sp/>mem)</highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*magic<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>mem.<ref refid="structirfs__mem_1ac7500702a991a65d6835ca0e6a0e30f6" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mem.<ref refid="structirfs__mem_1a579e55e3c819e91c74b5407746775551" kindref="member">length</ref><sp/>&gt;=<sp/>IRFS_HEADER_SIZE</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>magic[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>magic[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>magic[2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>magic[3]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;S&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structirfs__header" kindref="compound">irfs_header</ref><sp/>irfs_parse_header(struct<sp/><ref refid="structirfs__mem" kindref="compound">irfs_mem</ref><sp/>mem)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structirfs__header" kindref="compound">irfs_header</ref><sp/>header;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>header.<ref refid="structirfs__header_1a96d41040aac982016b49e5f5eb98a724" kindref="member">magic</ref><sp/>=<sp/>mem.start[0];</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>header.reserved<sp/>=<sp/>mem.start[1];</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>header.flags<sp/>=<sp/>mem.start[2];</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>header.size<sp/>=<sp/>mem.start[3];</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>header.heap_offset<sp/>=<sp/>mem.start[4];</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>header.icount<sp/>=<sp/>mem.start[5];</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/luke/le/aspera/aspera/init/irfs/header.c"/>
  </compounddef>
</doxygen>
